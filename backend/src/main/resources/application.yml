# Spring Boot配置文件
# 心理过程：分环境配置，开发时方便调试，生产时优化性能

server:
  port: 8081
  servlet:
    context-path: /api

spring:
  application:
    name: ai-ecommerce-backend
  
  # 允许循环引用
  main:
    allow-circular-references: true
  
  # 多环境配置支持
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # 数据库配置 (支持多环境)
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:ai_ecommerce}
    username: ${DB_USER:admin}
    password: ${DB_PASSWORD:password123}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: create  # 生产环境使用validate，开发环境可用update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
          order_inserts: true
          order_updates: true

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms

  # JSON配置
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: NON_NULL

# 应用配置
app:
  jwt:
    secret: ${JWT_SECRET:mySecretKey12345678901234567890123456789012345678901234567890}
    expiration: 86400000 # 24小时
    refresh-expiration: 604800000 # 7天
  
  ai-service:
    base-url: ${AI_SERVICE_URL:http://localhost:5000}
    timeout: 30s
  
  cors:
    allowed-origins: 
      - http://localhost:3000
      - http://127.0.0.1:3000
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers: "*"
    allow-credentials: true

# API文档配置
springdoc:
  api-docs:
    path: /docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha

# 日志配置
logging:
  level:
    com.aicommerce: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 管理端点
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

---
# Docker环境配置
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: jdbc:postgresql://postgres:5432/ai_ecommerce
  
  data:
    redis:
      host: redis

logging:
  level:
    com.aicommerce: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: WARN